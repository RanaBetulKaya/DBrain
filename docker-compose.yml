version: '3.1'

networks:
  mynetwork:
    driver: bridge

services:
  zookeeper: 
    image: wurstmeister/zookeeper
    networks:
      - mynetwork
    platform: linux/amd64
    container_name: zookeeper
    ports:
      - 2181:2181
  kafka: 
    image: wurstmeister/kafka
    networks:
      - mynetwork
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - 9092:9092
    expose:
      - 9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "DBrainTask"
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
    command: ["sh", "-c", "sleep 20 && sh /entrypoint.sh"]
    # command: bash -c "sleep 10 && /opt/kafka:2.13-2.7.0/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic DBrainTask"
  producer_consumer:
    build:
      context: ./ConsumerProducer
      dockerfile: Dockerfile
    volumes:
      - ./data:/data
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: 'kafka:9092'
      KAFKA_TOPIC: 'DBrainTask'
    networks:
      - mynetwork
  flask_api:
    build:
      context: ./FlaskApi
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    volumes:
      - ./data:/data
    depends_on:
      - producer_consumer
      - kafka
    networks:
      - mynetwork


